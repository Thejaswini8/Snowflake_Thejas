-- Assets list:
-- • 3 WAREHOUSES
-- o IMPORT_WH (MEDIUM, Quick AutoSuspend 5 mins, No MultiClustering. INITIALLY_SUSPENDED)
-- o TRANSFORM_WH (MEDIUM, Quick AutoSuspend 5 mins, No
-- Multi-Clustering, INITIALLY_SUSPENDED)
-- o REPORTING_WH (SMALL, Multi-Cluster upto 5, AutoSuspend
-- after 15 mins to keep cache alive,INITIALLY_SUSPENDED)


CREATE OR REPLACE WAREHOUSE IMPORT_WH
WAREHOUSE_SIZE='MEDIUM'
WAREHOUSE_TYPE='STANDARD'
AUTO_SUSPEND=300
INITIALLY_SUSPENDED=TRUE;

CREATE OR REPLACE WAREHOUSE TRANSFORM_WH
WAREHOUSE_SIZE='MEDIUM'
WAREHOUSE_TYPE='STANDARD'
AUTO_SUSPEND=300
INITIALLY_SUSPENDED=TRUE;

CREATE OR REPLACE WAREHOUSE REPORTING_WH
WAREHOUSE_SIZE='SMALL'
WAREHOUSE_TYPE='STANDARD'
AUTO_SUSPEND=900
MIN_CLUSTER_COUNT=1
MAX_CLUSTER_COUNT=5
SCALING_POLICY='STANDARD'
INITIALLY_SUSPENDED=TRUE;

SHOW WAREHOUSES;

-- • 2 DATABASES
-- o STAGING
-- o PROD

CREATE DATABASE STAGING;
CREATE DATABASE PROD;

SHOW DATABASES;

-- • 3 SCHEMAS
-- o STAGING.RAW (Default Data Retension 3 days for tables to keep
-- original raw data as it is ingested)
-- o STAGING.CLEAN (Default Data Retension 3 days for tables to
-- keep cleaned data for ETL & modeling & ETL)
-- o PROD.REPORTING (Data Retension 90 days - Used by Business
-- Users for analytics & keeps 90 day continous history )

--Schema for raw data with 3-day data retention
CREATE SCHEMA STAGING.RAW 
    DATA_RETENTION_TIME_IN_DAYS = 3 ;
--Schema for cleaned data with 3-day data retention
CREATE SCHEMA STAGING.CLEAN 
    DATA_RETENTION_TIME_IN_DAYS = 3 ;
-- Schema for reporting with 90-day data retention
CREATE SCHEMA PROD.REPORTING 
    DATA_RETENTION_TIME_IN_DAYS = 90 ;

SHOW SCHEMAS;
   
-- • 3 ROLES
-- o IMPORT_ROLE (Can read from file stage & write to both
-- schemas in StagingDB. No Access to Prod)
--  USAGE only access for Warehouse "IMPORT_WH" (Can't 
-- modify/resize)
--  USAGE access STAGING_SOURCE for import files
--  USAGE on STAGING_DB
--  Full access to RAW schema in STAGING_DB for all 
-- existing & new tables
--  Full access to CLEAN schema in STAGING_DB for all 
-- existing & new tables
--  No Access to PROD database
-- o TRANSFORM_ROLE (Can read & write to STAGING_DB.Clean +
-- PROD.REPORTING, No Access to STAGING_DB.Raw)
--  USAGE only access for Warehouse "TRASNFORM_WH" 
-- (Can't modify/resize)
--  Partial USAGE on STAGING_DB
--  Full access to CLEAN schema in STAGING for all existing & 
-- new tables
--  No access to RAW schema in STAGING
--  Full access to REPORTING schema in PROD for all existing 
-- & new tables
-- o REPORTING_ROLE (Read-only access to PROD.PROD schema &
-- tables)
--  USAGE only access for Warehouse "REPORTING_WH" 
-- (Can't modify/resize)
--  Read-Only access to PROD schema in PROD for all existing 
-- & new tables
--  No access to STAGING database

-- Creating Roles
CREATE ROLE IMPORT_ROLE;
CREATE ROLE TRANSFORM_ROLE;
CREATE ROLE REPORTING_ROLE;

-- Granting role privileges
-- IMPORT_ROLE
GRANT USAGE ON WAREHOUSE IMPORT_WH TO ROLE IMPORT_ROLE;
GRANT USAGE ON DATABASE STAGING TO ROLE IMPORT_ROLE;
GRANT USAGE ON SCHEMA STAGING.RAW TO ROLE IMPORT_ROLE;
GRANT USAGE ON SCHEMA STAGING.CLEAN TO ROLE IMPORT_ROLE;
GRANT ALL PRIVILEGES ON SCHEMA STAGING.RAW TO ROLE IMPORT_ROLE;
GRANT ALL PRIVILEGES ON SCHEMA STAGING.CLEAN TO ROLE IMPORT_ROLE;

-- TRANSFORM_ROLE
GRANT USAGE ON WAREHOUSE TRANSFORM_WH TO ROLE TRANSFORM_ROLE;
GRANT USAGE ON DATABASE STAGING TO ROLE TRANSFORM_ROLE;
GRANT USAGE ON SCHEMA STAGING.CLEAN TO ROLE TRANSFORM_ROLE;
GRANT USAGE ON DATABASE PROD TO ROLE TRANSFORM_ROLE;
GRANT USAGE ON SCHEMA PROD.REPORTING TO ROLE TRANSFORM_ROLE;
GRANT ALL PRIVILEGES ON SCHEMA STAGING.CLEAN TO ROLE TRANSFORM_ROLE;
GRANT ALL PRIVILEGES ON SCHEMA PROD.REPORTING TO ROLE TRANSFORM_ROLE;

-- REPORTING_ROLE
GRANT USAGE ON WAREHOUSE REPORTING_WH TO ROLE REPORTING_ROLE;
GRANT USAGE ON DATABASE PROD TO ROLE REPORTING_ROLE;
GRANT USAGE ON SCHEMA PROD.REPORTING TO ROLE REPORTING_ROLE;
GRANT SELECT ON ALL TABLES IN SCHEMA PROD.REPORTING TO ROLE REPORTING_ROLE;
GRANT SELECT ON FUTURE TABLES IN SCHEMA PROD.REPORTING TO ROLE REPORTING_ROLE;


-- • 3 USERS (Test Users)
-- o UserReporting (belongs to REPORTING_ROLE)
-- o UserTransform (belongs to TRANSFORM_ROLE)
-- o UserImport (belongs to IMPORT_ROLE)

CREATE USER UserReporting PASSWORD='StrongPassword123!' DEFAULT_ROLE = REPORTING_ROLE  MUST_CHANGE_PASSWORD=FALSE;
GRANT ROLE REPORTING_ROLE TO USER UserReporting;

CREATE USER UserTransform PASSWORD='StrongPassword123!' DEFAULT_ROLE = TRANSFORM_ROLE  MUST_CHANGE_PASSWORD=FALSE;
GRANT ROLE TRANSFORM_ROLE TO USER UserTransform;

CREATE USER UserImport PASSWORD='StrongPassword123!' DEFAULT_ROLE = IMPORT_ROLE  MUST_CHANGE_PASSWORD=FALSE;
GRANT ROLE IMPORT_ROLE TO USER UserImport;

-- • 3 USAGE MONITORS
-- o IMPORT_MONITOR (100 credits a month)
-- o TRANSFORM_MONITOR (100 credits a month)
-- o REPORTING_MONITOR (100 credits a month)

-- Create Resource Monitors
CREATE RESOURCE MONITOR IMPORT_MONITOR WITH CREDIT_QUOTA = 100;
CREATE RESOURCE MONITOR TRANSFORM_MONITOR WITH CREDIT_QUOTA = 100;
CREATE RESOURCE MONITOR REPORTING_MONITOR WITH CREDIT_QUOTA = 100;

-- Assign Resource Monitors to Warehouses
ALTER WAREHOUSE IMPORT_WH SET RESOURCE_MONITOR = IMPORT_MONITOR;
ALTER WAREHOUSE TRANSFORM_WH SET RESOURCE_MONITOR = TRANSFORM_MONITOR;
ALTER WAREHOUSE REPORTING_WH SET RESOURCE_MONITOR = REPORTING_MONITOR;
